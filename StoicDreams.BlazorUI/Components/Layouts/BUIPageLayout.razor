@inherits TransitionableLayoutComponent
@using BlazorTransitionableRoute
@inject IAppOptions AppOptions

<main class="@TransitioningClass">
	<ErrorBoundary @ref="ErrorFragment" Context="error">
		<ChildContent>
			@Body
		</ChildContent>
		<ErrorContent>
			<DynamicComponent Type="ErrorPage" Parameters="GetErrorPageParameters(error)" />
		</ErrorContent>
	</ErrorBoundary>
</main>

@code {
	private string TransitioningDirection => this.Transition.Backwards ? "Up" : "Down";
	private string TransitioningClass => Transition.FirstRender ? "" : $"{TransitioningEffect()} animate__faster animate__animated";
	private Type ErrorPage => ((AppOptions)AppOptions).ErrorPage;
	private Dictionary<string, object> GetErrorPageParameters(Exception error) => new()
	{
		{"Exception", error }
	};

	private ErrorBoundary? ErrorFragment { get; set; }

	protected override void OnParametersSet()
	{
		ErrorFragment?.Recover();
		base.OnParametersSet();
	}

	private string TransitioningEffect()
	{
		Type transitionFromType = TransitionType.fromType;
		Type transitionToType = TransitionType.toType;
		string effect = Transition.IntoView ? "fadeIn" : "fadeOut";
		string direction = Transition.Backwards ? "Up" : "Down";
		return $"animate__{effect}{direction}{(Transition.IntoView ? " inview" : string.Empty)}";
	}
}