@inherits BUICore

@inject IThemeState ThemeState

@GetStyles

@code {
	private ThemeConfig Config => ThemeState.Current;
	private List<ThemeConfig> ConfigList => ThemeState.Themes;


	protected override Task OnInitializedAsync()
	{
		ThemeState.SetupDefaultThemes();
		ApplyDefaultTheme();
		ThemeState.SubscribeToDataChanges(ComponentId, HandleChange);
		return base.OnInitializedAsync();
	}

	public override void Dispose()
	{
		ThemeState.UnsubscribeToDataChanges(ComponentId);
		base.Dispose();
	}

	private bool IsFirstChange { get; set; } = true;
	private void HandleChange()
	{
		InvokeAsync(StateHasChanged);
	}

	private void ApplyDefaultTheme()
	{
		IsFirstChange = false;
		List<ThemeConfig> list = ConfigList;
		if (list.Count > 0)
		{
			ThemeState.Current = list[0];
		}
	}

	private MarkupString GetStyles => new($@"
<style type=""text/css"">
	:root {{
		--htag-font-size: 1.5rem;
		--nav-transition-in: 300ms;
		--nav-transition-out: 300ms;
		--mud-palette-black: {Config.Black};
		--mud-palette-white: {Config.White};
		--mud-palette-primary: {Config.Primary};
		--mud-palette-primary-rgb: {Config.Primary.RgbValue};
		--mud-palette-primary-text: {Config.Primary.Offset};
		--mud-palette-primary-darken: {Config.Primary.Darker};
		--mud-palette-primary-lighten: {Config.Primary.Lighter};
		--mud-palette-primary-hover: rgba({Config.Primary.RgbValue},0.058823529411764705);
		--mud-palette-secondary: {Config.Secondary};
		--mud-palette-secondary-rgb: {Config.Secondary.RgbValue};
		--mud-palette-secondary-text: {Config.Secondary.Offset};
		--mud-palette-secondary-darken: {Config.Secondary.Darker};
		--mud-palette-secondary-lighten: {Config.Secondary.Lighter};
		--mud-palette-secondary-hover: rgba({Config.Secondary.RgbValue},0.058823529411764705);
		--mud-palette-tertiary: {Config.Tertiary};
		--mud-palette-tertiary-rgb: {Config.Tertiary.RgbValue};
		--mud-palette-tertiary-text: {Config.Tertiary.Offset};
		--mud-palette-tertiary-darken: {Config.Tertiary.Darker};
		--mud-palette-tertiary-lighten: {Config.Tertiary.Lighter};
		--mud-palette-tertiary-hover: rgba({Config.Tertiary.RgbValue},0.058823529411764705);
		--mud-palette-info: {Config.Info};
		--mud-palette-info-rgb: {Config.Info.RgbValue};
		--mud-palette-info-text: {Config.Info.Offset};
		--mud-palette-info-darken: {Config.Info.Darker};
		--mud-palette-info-lighten: {Config.Info.Lighter};
		--mud-palette-info-hover: rgba({Config.Info.RgbValue},0.058823529411764705);
		--mud-palette-success: {Config.Success};
		--mud-palette-success-rgb: {Config.Success.RgbValue};
		--mud-palette-success-text: {Config.Success.Offset};
		--mud-palette-success-darken: {Config.Success.Darker};
		--mud-palette-success-lighten: {Config.Success.Lighter};
		--mud-palette-success-hover: rgba({Config.Success.RgbValue},0.058823529411764705);
		--mud-palette-warning: {Config.Warning};
		--mud-palette-warning-rgb: {Config.Warning.RgbValue};
		--mud-palette-warning-text: {Config.Warning.Offset};
		--mud-palette-warning-darken: {Config.Warning.Darker};
		--mud-palette-warning-lighten: {Config.Warning.Lighter};
		--mud-palette-warning-hover: rgba({Config.Warning.RgbValue},0.058823529411764705);
		--mud-palette-error: {Config.Error};
		--mud-palette-error-rgb: {Config.Error.RgbValue};
		--mud-palette-error-text: {Config.Error.Offset};
		--mud-palette-error-darken: {Config.Error.Darker};
		--mud-palette-error-lighten: {Config.Error.Lighter};
		--mud-palette-error-hover: rgba({Config.Error.RgbValue},0.058823529411764705);
		--mud-palette-dark: {Config.Dark};
		--mud-palette-dark-rgb: {Config.Dark.RgbValue};
		--mud-palette-dark-text: {Config.Dark.Offset};
		--mud-palette-dark-darken: {Config.Error.Darker};
		--mud-palette-dark-lighten: {Config.Error.Lighter};
		--mud-palette-dark-hover: rgba({Config.Dark.RgbValue},0.058823529411764705);
		--mud-palette-text-primary: {Config.AppBackground.Offset};
		--mud-palette-text-secondary: {Config.Primary.Offset};
		--mud-palette-text-disabled: #80808080;
		--mud-palette-action-default: #80808089;
		--mud-palette-action-default-hover: rgba(80,80,80,0.058823529411764705);
		--mud-palette-action-disabled: #80808042;
		--mud-palette-action-disabled-background: #8080801e;
		--mud-palette-surface: {Config.AppBackground};
		--mud-palette-background: {Config.AppBackground};
		--mud-palette-background-grey: {Config.AppBackground.Shifted};
		--mud-palette-drawer-background: {Config.DrawerBackground};
		--mud-palette-drawer-text: {Config.DrawerBackground.Offset};
		--mud-palette-drawer-icon: {Config.DrawerBackground.Offset};
		--mud-palette-appbar-background: {Config.AppBarBackground};
		--mud-palette-appbar-text: {Config.AppBarBackground.Offset};
		--mud-palette-lines-default: #0000001e;
		--mud-palette-lines-inputs: #bdbdbdff;
		--mud-palette-table-lines: #e0e0e0ff;
		--mud-palette-table-striped: #00000005;
		--mud-palette-table-hover: #0000000a;
		--mud-palette-divider: #e0e0e0ff;
		--mud-palette-divider-light: #000000cc;
		--mud-palette-grey-default: #9E9E9E;
		--mud-palette-grey-light: #BDBDBD;
		--mud-palette-grey-lighter: #E0E0E0;
		--mud-palette-grey-dark: #757575;
		--mud-palette-grey-darker: #616161;
		--mud-palette-overlay-dark: rgba(33,33,33,0.4980392156862745);
		--mud-palette-overlay-light: rgba(255,255,255,0.4980392156862745);
		--mud-typography-default-size: .875rem;
		--mud-typography-h1-size: var(--htag-font-size);
		--mud-typography-h2-size: var(--htag-font-size);
		--mud-typography-h3-size: var(--htag-font-size);
		--mud-typography-h4-size: var(--htag-font-size);
		--mud-typography-h5-size: var(--htag-font-size);
		--mud-typography-h6-size: var(--htag-font-size);
		--mud-drawer-width-mini-left: 60px;
	}}
	ul.mud-breadcrumbs {{
		padding: 3px 3px 3px;
	}}
</style>");

}