<Project Sdk="Microsoft.NET.Sdk.BlazorWebAssembly">

	<PropertyGroup>
		<TargetFramework>net6.0</TargetFramework>
		<Nullable>enable</Nullable>
		<ImplicitUsings>enable</ImplicitUsings>
		<ServiceWorkerAssetsManifest>service-worker-assets.js</ServiceWorkerAssetsManifest>
		<BlazorWebAssemblyEnableLinking>false</BlazorWebAssemblyEnableLinking>
	</PropertyGroup>

	<ItemGroup>
		<PackageReference Include="Microsoft.AspNetCore.Components.WebAssembly" Version="6.0.8" />
	</ItemGroup>

	<ItemGroup>
		<BlazorWebAssemblyLazyLoad Include="Microsoft.CodeAnalysis.dll" />
		<BlazorWebAssemblyLazyLoad Include="Microsoft.CodeAnalysis.CSharp.dll" />
		<BlazorWebAssemblyLazyLoad Include="Microsoft.CodeAnalysis.CSharp.resources.dll" />
		<BlazorWebAssemblyLazyLoad Include="Microsoft.CodeAnalysis.resources.dll" />
		<BlazorWebAssemblyLazyLoad Include="Microsoft.CodeAnalysis.Razor.dll" />
	</ItemGroup>

	<Choose>
		<When Condition="'$(Configuration)' == 'Debug'">
			<ItemGroup>
				<ProjectReference Include="..\StoicDreams.BlazorUI\StoicDreams.BlazorUI.csproj" />
				<PackageReference Include="Microsoft.AspNetCore.Components.WebAssembly.DevServer" Version="6.0.8" PrivateAssets="all" />
			</ItemGroup>
		</When>
		<Otherwise>
			<ItemGroup>
				<PackageReference Include="StoicDreams.BlazorUI" Version="1.9.15" />
			</ItemGroup>
		</Otherwise>
	</Choose>

	<ItemGroup>
		<ServiceWorker Include="wwwroot\service-worker.js" PublishedContent="wwwroot\service-worker.published.js" />
	</ItemGroup>

	<!--Workaround to allow Intellisense to capture data during development builds to CSS intellisense can identify styles from Nuget packages that include CSS files-->
	<Target Name="CollectBlazorUIStaticAssets" DependsOnTargets="ResolveStaticWebAssetsInputs" AfterTargets="Build" Condition="'$(Configuration)' == 'Debug' ">
		<Copy SourceFiles="%(StaticWebAsset.Identity)" DestinationFolder="wwwroot/temp" Condition="$([System.String]::Copy(%(StaticWebAsset.Identity)).Contains('blazorui'))" />
	</Target>
	<Target Name="CollectMudBlazorStaticAssets" DependsOnTargets="ResolveStaticWebAssetsInputs" AfterTargets="Build" Condition=" '$(Configuration)' == 'Debug' ">
		<Copy SourceFiles="%(StaticWebAsset.Identity)" DestinationFolder="wwwroot/temp" Condition="$([System.String]::Copy(%(StaticWebAsset.Identity)).Contains('mudblazor'))" />
	</Target>
</Project>
