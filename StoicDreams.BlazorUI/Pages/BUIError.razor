@page "/error"

@inject IAppState AppState

<BUIPageDetail Title="Error" />

<MudPaper Class="ma-10 pa-10 d-flex flex-column gap-10 align-center" Elevation="0">
	<MudIcon Icon="@Icons.Material.TwoTone.Error" Color="Color.Error" Style="font-size: 20rem" />
	<MudAlert Severity="Severity.Error">
		@if (Exception != null)
		{
			@Exception.Message
		}
		else
		{
			@GetMessage
		}
	</MudAlert>
</MudPaper>

@code {
	[Parameter]
	[SupplyParameterFromQuery(Name = "error")]
	public string Message { get; set; } = string.Empty;
	[Parameter]
	public Exception? Exception { get; set; }

	private string GetMessage => string.IsNullOrWhiteSpace(Message) ? AppState.GetData<string?>(AppStateDataTags.NotFoundDefaultMessage) ?? DefaultMessage : Message;

	protected override Task OnInitializedAsync()
	{
		AppState.SetData(AppStateDataTags.IsNavigating, false);
		return base.OnInitializedAsync();
	}

	private const string DefaultMessage = "An unexpected error occurred handling your request.";
}
