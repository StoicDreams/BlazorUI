@using StoicDreams.SampleWebsite.DataTypes
@inherits BUICore
@inject IApiRequest ApiRequest

<BUIDialogConfirm OnSave="OnSave" OnCancel="OnCancel">
	<MudTextField Label="Message" Lines="MessageLines" @bind-Value="@MessageUpdate" HelperText="Enter your feedback here" />
	<MudOverlay Visible="ShowOverlay" DarkBackground="true" Absolute="true">
		<MudProgressCircular Color="Color.Secondary" Indeterminate="true" />
	</MudOverlay>
</BUIDialogConfirm>


@code {
	private string MessageUpdate
	{
		get
		{
			return Message;
		}
		set
		{
			Message = value;
			MessageLines = Math.Max(MinMessageLines, Message.Split('\n').Length + 1);
			StateHasChanged();
		}
	}
	private const int MinMessageLines = 10;
	private string Message { get; set; } = string.Empty;
	private int MessageLines { get; set; } = MinMessageLines;
	private bool ShowOverlay { get; set; }

	private async Task OnSave()
	{
		string sending = Message.Trim();
		if (string.IsNullOrWhiteSpace(sending)) { return; }
		ShowOverlay = true;
		InputFeedback feedback = new() { Message = sending };
		TResult<string> response = await ApiRequest.PostJsonAsync<string, InputFeedback>("https://api.myfi.ws/Feedback", feedback);
		if (!response.IsOkay)
		{
			Snackbar.Add(FirstNotEmpty(response.Result, response.Message, "An unknown error happened sending your feedback."), Severity.Error);
			return;
		}
		ShowOverlay = false;
		Snackbar.Add(FirstNotEmpty(response.Result, response.Message, "Feedback successfully sent"), Severity.Success);
	}



	private void OnCancel()
	{
		
	}
}
