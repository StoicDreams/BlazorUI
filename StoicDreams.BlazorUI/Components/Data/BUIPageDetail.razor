@inject IAppState AppState
@inject IJsInterop JSInterop
@inject IAppOptions AppOptions

@code {
	[Parameter]
	public string Title { get; set; } = string.Empty;
	private string AppTitle => AppOptions.TitleFormat
			.Replace("{AppName}", AppOptions.AppName)
			.Replace("{PageTitle}", AppState.GetData<string>(AppStateDataTags.PageTitle) ?? string.Empty)
			;

	protected override async Task OnInitializedAsync()
	{
		await AppState.ApplyChangesAsync(() =>
		{
			AppState.SetData(AppStateDataTags.PageTitle, Title);
			AppState.SetData(AppStateDataTags.IsNavigating, false);
			return ValueTask.CompletedTask;
		});
		await JSInterop.UpdateTitle(AppTitle);
		await base.OnInitializedAsync();
	}
}
