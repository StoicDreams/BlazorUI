@inherits BUICore

@if (TryGetLogo(out RenderFragment logo))
{
	<span class="logo ml-2 mr-2">@logo</span>
}

@if (ShowTitleDisplay)
{
	<MudText Typo="Typo.h1">
		@GetPageTitleDisplay
	</MudText>
}

<MudSpacer />

<DynamicComponent Type="TitleBarRightSideContent" />

@code {
	private string AppName => ShowAppName ? AppOptions.AppName : string.Empty;
	private string PageTitle => ShowPageTitle ? GetAppState<string>(AppStateDataTags.PageTitle, () => string.Empty) : string.Empty;
	private bool ShowAppName => GetAppState<bool>(AppStateDataTags.TitleBarShowAppName);
	private bool ShowPageTitle => GetAppState<bool>(AppStateDataTags.TitleBarShowPageTitle);
	private bool ShowTitleDisplay => ShowAppName || ShowPageTitle;
	private Type TitleBarRightSideContent => GetAppState<Type>(AppStateDataTags.TitleBarRightSideContent) ?? typeof(BUITitleBarQuickLinks);
	private bool TryGetLogo(out RenderFragment logo)
	{
		string? logoText = GetAppState<string?>(AppStateDataTags.TitleBarLogo);
		RenderFragment? loadedLogo = GetAppState<RenderFragment?>(AppStateDataTags.TitleBarLogo);
		if (loadedLogo != null) {
			logo = loadedLogo;
			return true;
		}
		if (!string.IsNullOrWhiteSpace(logoText))
		{
			logo = logoText.ConvertToRenderFragment();
			return true;
		}
		logo = "".ConvertToRenderFragment();
		return false;
	}

	private string GetPageTitleDisplay
	{
		get
		{
			string appName = AppName;
			string title = PageTitle;
			if (string.IsNullOrWhiteSpace(appName) && string.IsNullOrWhiteSpace(title)) { return string.Empty; }
			if (string.IsNullOrWhiteSpace(appName)) { return title; }
			return $"{appName} - {title}";
		}
	}
}
